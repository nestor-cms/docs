<!DOCTYPE html>

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Nestor Documentation</title>
  <link rel="stylesheet" href="css/style.css">
  <script type="text/javascript" src="js/scripts.js"></script>
</head>
<body onload="includeHTML()">
  <div id="menu" menu-html="menu.html">

  </div>

  <div class="main">
   <!--INSERT CONTENT HERE-->

   <h1>
    Page Class
</h1>

<hr size="3" width="100%" align="center"/>

<p>
    The Page Class contains properties and methods used to build out the final
    page. It first determines what page is being requested, by reading the URL
    and pulling out either a component ID or Recipe url value. Page then fills
    a multi-dimensional component array based on parent-child relationships in
    the database – these entries and relationships are created by the Recipe
    and by end users adding content to Pages. Last, Page reads the Recipe and
    compares it to the component array, and determines what content should be
    displayed based on user role and other settings.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935"  class="header_cell">
                
                    Properties
                
            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <th width="215" >

                    <strong>Name</strong>

            </th>
            <th width="135" >

                    <strong>Type</strong>

            </th>
            <th width="587" >

                    <strong>Description</strong>

            </th>
        </tr>
        <tr>
            <td  >

                    [key]

            </td>
            <td  >

                    String

            </td>
            <td  >

                    Persistent keys and values – attributes stored in the
                    $_SESSION super global marked ‘persistent’, which are
                    re-added to $page on each page load

            </td>
        </tr>
        <tr>
            <td  >

                    $recipe

            </td>
            <td  >

                    Array

            </td>
            <td  >

                    Array to hold recipe info

            </td>
        </tr>
        <tr>
            <td  >

                    $sub_recipe

            </td>
            <td  >

                    Array

            </td>
            <td  >

                    Any sub-recipes found

            </td>
        </tr>
        <tr>
            <td  >

                    $template

            </td>
            <td  >

                    String

            </td>
            <td  >

                    Template used to build page

            </td>
        </tr>
        <tr>
            <td  >

                    $components

            </td>
            <td  >

                    Array

            </td>
            <td  >

                    Array to hold all components, formatted as objects. They
                    are ordered based on the parentIDs for the components ahead
                    of the called component, and then the subcomponents after.

            </td>
        </tr>
        <tr>
            <td  >

                    $file_uploader

            </td>
            <td  >

                    Boolean

            </td>
            <td  >

                    Indicates that a file uploader element has been added to
                    the page, set in add_file_uploader() class of many media
                    classes

            </td>
        </tr>
        <tr>
            <td  >

                    $title

            </td>
            <td  >

                    String

            </td>
            <td  >

                    Title of the page (also in VCE so may be removed from page)

            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0" id="methods">
    <tbody>
        <tr>
            <td width="935" class="method_name">Methods
                
            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <th width="235" >

                    <strong>Name/Syntax</strong>
    

            </th>
            <th width="700" >

                    <strong>Description</strong>

            </th>
        </tr>
        <tr>
            <td >

                    <strong>Private</strong>
                    build_content

            </td>
            <td  >

                    Builds content from components. Called from __construct(),
                    is given a list of components and the recipe, and then
                    orders the components and recursively calls on them to add their content to the
                    $content object.  Called during the <a href="extend_build_content_flow.htm">Build Content process</a>.<br><br>


                    This can’t be called by another component directly. However
                    it does interact with components in the page being built
                    and contains hooks where a component can insert
                    functionality.<br><br>


                    Use the display_components() method to call build_content()
                    from another component.

            </td>
        </tr>
        <tr>
            <td >

                    <strong>
                        <a
                            href="#can_add"
                        >
                            can_add
                        </a>
                    </strong>
                    ($each_component)

            </td>
            <td  >

                    Checks to see if user can add a component to the page

            </td>
        </tr>
        <tr>
            <td >

                    <strong>
                        <a
                            href="#can_delete"
                        >
                            can_delete
                        </a>
                    </strong>
                    ($each_component)

            </td>
            <td  >

                    Checks to see if user can delete a component on the page

            </td>
        </tr>
        <tr>
            <td >

                    <strong>
                        <a
                            href="#can_edit"
                        >
                            can_edit
                        </a>
                    </strong>
                    ($each_component)

            </td>
            <td  >

                    Checks to see if user can edit a component on the page

            </td>
        </tr>
        <tr>
            <td >

                    <strong>
                        <a
                            href="#display_components"
                        >
                            display_components
                        </a>
                    </strong>
                    ($components, $recipe = null, $requested_id = null, $linked
                    = false, $recipe_tracker = array())

            </td>
            <td  >

                    Calls build_content to allow you to see what the final page
                    output will be

            </td>
        </tr>
  
        <tr>
            <td >

                    <strong>
                        <a
                            href="#find_url"
                        >
                            find_url
                        </a>
                    </strong>
                   
                    ($component_id)

            </td>
            <td  >

                    Gets url that is associated with component, which is the
                    first one encountered working backwards through parents

            </td>
        </tr>
        <tr>
            <td >

                    <strong>
                        <a
                            href="#get_children"
                        >
                            get_children
                        </a>
                    </strong>
                    ($current_id, $parent_id = null, $component = array(),
                    $sub_components = array(), $sub_url = false, $full_object =
                    false)

            </td>
            <td  >

                    Calls get_sub_components to get children of a parent_id

            </td>
        </tr>
        <tr>
            <td >

                 <strong>Static <a href="#get_parents">get_parents</a> </strong> ($component_id)

            </td>
            <td  >

                    Returns an array with parents of a specific component. Is
                    similar to get_components

            </td>
        </tr>
        <tr>
            <td >

                    <strong>Private</strong>
                    get_components ($page_id, $requested_id, $components)

            </td>
            <td  >

                    Finds all components upstream of the component $requested,
                    and then fills in all sub_components. Returns
                    multi-dimensional array of all components related to a
                    specific page. Called during the <a href="extend_build_component_array_flow.htm">Build Component Array process</a>.<br><br>


                    This can’t be called by another component directly. However
                    it does interact with components in the page being built
                    and contains hooks where a component can insert
                    functionality.<br><br>


                    The get_parents() method allows you to partially emulate
                    this method from another component.<br><br>

            </td>
        </tr>
        <tr>
            <td >

                    <strong>Private</strong>
                    get_sub_components ($current_id, $parent_id, $components,
                    $sub_components = array(), $sub_url = false, $full_object =
                    false)

            </td>
            <td  >

                    Finds all components downstream of the $current_id and adds
                    to a multi-dimensional array. Called during the <a href="extend_build_component_array_flow.htm">Build Component Array process</a>.<br><br>


                    This can’t be called by another component directly. However
                    it does interact with components in the page being built
                    and contains hooks where a component can insert
                    functionality.<br><br>


                    Use the get_children() method to call get_sub_components()
                    from another component.

            </td>
        </tr>

    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="header_cell">
                
                    Method Details
                
            </td>
        </tr>
    </tbody>
</table>

<table border="1" cellspacing="0" cellpadding="0" id="can_add">
    <tbody>
        <tr>
            <td width="935" class="method_name">Can Add
                
            </td>
        </tr>
    </tbody>
</table>
<p>
    Checks to see if user can add a component to the page
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="method_syntax">

                    can_add ($each_component)

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    $each_component

            </td>
            <td width="162" >

                    Object

            </td>
            <td width="576" >

                    The component that is being checked for user access

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    Boolean

            </td>
            <td width="738" >

                    True if user can add or if user is an admin, false if user
                    can’t add

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Example
</h3>
<p>
    can_add is called in <a href="extend_build_content_flow.htm">Component::build_content</a> to determine if
    the component add form should be displayed for the current user
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="codified">

                    if ($vce-&gt;page-&gt;can_add((object)
                    $each_recipe_component)) {<br>


                    &nbsp;&nbsp;//add code to add form fields<br>


                    }

            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a></p>

<table border="1" cellspacing="0" cellpadding="0" id="can_delete">
    <tbody>
        <tr>
            <td width="935" class="method_name">Can Delete
            </td>
        </tr>
    </tbody>
</table>
<p>
    Checks to see if user can delete a component
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="method_syntax">

                    can_delete ($each_component)

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    $each_component

            </td>
            <td width="162" >

                    Object

            </td>
            <td width="576" >

                    The component that is being checked for user access

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    Boolean

            </td>
            <td width="738" >

                    True if user can delete or if user is an admin, false if
                    user can’t delete

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Example
</h3>
<p>
    can_delete is called in Item::edit_component to determine if the component
    delete button should be displayed for the current user
</p>
<table border="1" cellspacing="0" cellpadding="0" class="codified">
    <tbody>
        <tr>
            <td width="935" class="codified">

                    if ($vce-&gt;page-&gt;can_delete($each_component)) {<br>


                    &nbsp;&nbsp;//code to display delete button for component<br>


                    }

            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a></p>

<table border="1" cellspacing="0" cellpadding="0" id="can_edit">
    <tbody>
        <tr>
            <td width="935" class="method_name">Can Edit
                
            </td>
        </tr>
    </tbody>
</table>
<p>
    Checks to see if user can edit a component
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="method_syntax">

                    can_edit ($each_component)

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    $each_component

            </td>
            <td width="162" >

                    Object

            </td>
            <td width="576" >

                    The component that is being checked for user access

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    Boolean

            </td>
            <td width="738" >

                    True if user can edit or if user is an admin, false if user
                    can’t edit

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Example
</h3>
<p>
    can_edit is called in Media::as_content to determine if the component edit
    form should be displayed for the current user
</p>
<table border="1" cellspacing="0" cellpadding="0" class="codified">
    <tbody>
        <tr>
            <td width="935" class="codified">

                    if ($vce-&gt;page-&gt;can_edit($each_component)) {<br>


                    &nbsp;&nbsp;//add code to display edit form for component<br>


                    }

            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a></p>

<table border="1" cellspacing="0" cellpadding="0" id="display_components">
    <tbody>
        <tr>
            <td width="935" class="method_name">Display Components
                
            </td>
        </tr>
    </tbody>
</table>
<p>
    Calls <a href="extend_build_content_flow.htm">build_content</a> to allow you to see what the final page output will be.</p>
    <p><strong>Note</strong>: if you want to have recipe_components / add_component work for
    components sent to this method, you need to send along a requested_id with
    the recipe. $requested_id should be the component_id from where you want
    the sub_recipe to allow add_content. The recipe should include the parent
    component of the requested_id.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="method_syntax">

                    display_components ($components, $recipe = null,
                    $requested_id = null, $linked = false, $recipe_tracker =
                    array())

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    $components

            </td>
            <td width="162" >

                    Array

            </td>
            <td width="576" >

                    Array of the components that you want to display. This
                    would be along the lines of $page-&gt;components

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $recipe

            </td>
            <td width="162" >

                    Array

            </td>
            <td width="576" >

                    Recipe for the components

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $requested_id

            </td>
            <td width="162" >

                    Int

            </td>
            <td width="576" >

                    The requested ID that goes with the $recipe. Generally is
                    the component_id of the first component in the recipe

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $linked

            </td>
            <td width="162" >

                    Boolean

            </td>
            <td width="576" >

                    A value used in the build_content method to track
                    recursion. False by default

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $recipe_tracker

            </td>
            <td width="162" >

                    Array

            </td>
            <td width="576" >

                    An array that acts as a placeholder when traversing the
                    $components array. Set to blank by default

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td>

                    No return value

            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="codified">

                    $vce-&gt;page-&gt;display_components
                    ($vce-&gt;page-&gt;components, $vce-&gt;page-&gt;recipe,


                    $vce-&gt;page-&gt;components[0]-&gt;component_id);

            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a></p>

<table border="1" cellspacing="0" cellpadding="0" id="find_url">
    <tbody>
        <tr>
            <td width="935" class="method_name">Find URL
                
            </td>
        </tr>
    </tbody>
</table>
<p>
    Gets url that is associated with component, which is the first one
    encountered working backwards through parents. Returns full path including
    site URL.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="method_syntax">

                    find_url ($component_id)

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    $component_id

            </td>
            <td width="162" >

                    Int

            </td>
            <td width="576" >

                    ID of component

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    String

            </td>
            <td width="738" >

                    URL belonging to closed parent up the recipe chain

            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="codified">

                    $link_url =
                    $vce-&gt;find_url($each_media_item-&gt;component_id);

            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a></p>

<table border="1" cellspacing="0" cellpadding="0" id="get_children">
    <tbody>
        <tr>
            <td width="935" class="method_name">Get Children
                
            </td>
        </tr>
    </tbody>
</table>
<p>
    Calls get_sub_components to get children of a parent_id, and all of their
    descendants. Returned in a multi-dimensional array.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="method_syntax">

                    get_children ($current_id, $parent_id = null, $component =
                    array(), $sub_components = array(), $sub_url = false,
                    $full_object = false)

            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" >

                    $current_id

            </td>
            <td width="162" >

                    Int

            </td>
            <td width="576" >

                    ID of component whose descendants you want to fetch

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $parent_id

            </td>
            <td width="162" >

                    Int


                    (Optional)

            </td>
            <td width="576" >

                    ID of parent of the current component, set to null by
                    default

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $component

            </td>
            <td width="162" >

                    Array (Optional)

            </td>
            <td width="576" >

                    Array of components, set empty by default

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $sub_components

            </td>
            <td width="162" >

                    Array (Optional)

            </td>
            <td width="576" >

                    Array of sub-components, set empty by default

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $sub_url

            </td>
            <td width="162" >

                    Boolean (Optional)

            </td>
            <td width="576" >

                    Set to false by default

            </td>
        </tr>
        <tr>
            <td width="198" >

                    $full_object

            </td>
            <td width="162" >

                    Boolean (Optional)

            </td>
            <td width="576" >

                    Set to false by default

            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Return array
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="157" >

                    

            </td>
            <td width="110" >

                    Array

            </td>
            <td width="668" >

                    Array contains objects representing components

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="936" colspan="4" class="bold">

                    Properties of the objects in array

            </td>
        </tr>
        <tr>
            <td width="157" >

                    component_id

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    Component ID

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    parent_id

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    ID of parent of component

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    Sequence

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    Order in which component appears

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    url

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    url if component is the anchor of the recipe

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    created_at

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    timestamp

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    created_by

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    ID of the user who created the component

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    title

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    Title of the component

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    Type

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    Class type of component

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="157" >

                    Updated_at

            </td>
            <td width="110" >

                    Int

            </td>
            <td width="668" >

                    Timestamp when component was last updated

            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
                <td width="157" >
    
                        [key]
    
                </td>
                <td width="110" >
    
                        String
    
                </td>
                <td width="668" >
    
                        Other key/value pairs from the components_meta table
    
                </td>
                <td width="1">
                </td>
            </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" class="codified">

                    $children =
                    $vce-&gt;get_children($each_submission-&gt;component_id);

            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a></p>


<table border="1" cellspacing="0" cellpadding="0" id="get_parents">
        <tbody>
            <tr>
                <td width="935" class="method_name">Get Parents
                    
                </td>
            </tr>
        </tbody>
    </table>
    <p>
            Returns an array with parents of a specific component.  Is public version of get_components
    </p>
    <table border="1" cellspacing="0" cellpadding="0">
        <tbody>
            <tr>
                <td width="935" class="method_syntax">
    
                        get_parents ($component_id)
    
                </td>
            </tr>
        </tbody>
    </table>
    <h3>
        Parameters
    </h3>
    <table border="1" cellspacing="0" cellpadding="0">
        <tbody>
            <tr>
                <td width="198" >
    
                        $component_id
    
                </td>
                <td width="162" >
    
                        Int
    
                </td>
                <td width="576" >
    
                        ID of component whose parents you want to fetch
    
                </td>
            </tr>
          
        </tbody>
    </table>
    <h3>
    </h3>
    <h3>
        Return array
    </h3>
    <table border="1" cellspacing="0" cellpadding="0">
        <tbody>
            <tr>
                <td width="157" >
    
                        
    
                </td>
                <td width="110" >
    
                        Array
    
                </td>
                <td width="668" >
    
                        Array contains objects representing components
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="936" colspan="4" class="bold">
    
                        Potential properties of the objects in array
    
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        component_id
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        Component ID
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        parent_id
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        ID of parent of component
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        Sequence
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        Order in which component appears
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        url
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        url if component is the anchor of the recipe
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        created_at
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        timestamp
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        created_by
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        ID of the user who created the component
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        title
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        Title of the component
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        Type
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        Class type of component
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                <td width="157" >
    
                        Updated_at
    
                </td>
                <td width="110" >
    
                        Int
    
                </td>
                <td width="668" >
    
                        Timestamp when component was last updated
    
                </td>
                <td width="1">
                </td>
            </tr>
            <tr>
                    <td width="157" >
        
                            [key]
        
                    </td>
                    <td width="110" >
        
                            String
        
                    </td>
                    <td width="668" >
        
                            Other key/value pairs from the components_meta table
        
                    </td>
                    <td width="1">
                    </td>
                </tr>
        </tbody>
    </table>
    <h3>
    </h3>
    <h3>
        Example
    </h3>
    <table border="1" cellspacing="0" cellpadding="0">
        <tbody>
            <tr>
                <td width="935" class="codified">
    
                        $parent_components = Page::get_parents($value['component_id']);
    
                </td>
            </tr>
        </tbody>
    </table>
    
    <p><a href="#methods">Back to Top</a></p>


  </div><!--end main div-->

 
</body>
</html>
