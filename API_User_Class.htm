<!DOCTYPE html>

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Nestor Documentation</title>
  <link rel="stylesheet" href="css/style.css">
  <script type="text/javascript" src="js/scripts.js"></script>
</head>
<body onload="includeHTML()">
  <div id="menu" menu-html="menu.html">

  </div>

  <div class="main">
   <!--INSERT CONTENT HERE-->
   <h1>
    User Class
</h1>
<div align="center">
    <hr width="100%"/>
</div>

<p>
    The user class maintains information related to the user, and is
    responsible for securing user data with hashing and encryption functions.
    On instantiation, the user object starts a session and checks for an
    existing user object. If the session object is not found, it will check for
    persistent login cookie. If persistent login cookie exists, it will load
    the session object with this info. If not, it will load user info from the
    database. If persistent login is not enabled for the system, the user will
    be required to log in.
</p>
<p>
    During page load, user data is retrieved from the [<span class="italic">my_db</span>]_users
    and [<span class="italic">my_db</span>]_users_meta tables and stored as properties of the user
    object referenced by key name. All user data is encrypted in these tables,
    but decrypted when added to the user object. The encryption vector for each
    user is stored in the [<span class="italic">my_db</span>]_users table, as well as the hashed
    email/password.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="header_cell">Properties
            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <th width="136" valign="top">
 
                    <strong>Name</strong>
 
            </th>
            <th width="143" valign="top">
 
                    <strong>Type</strong>
 
            </th>
            <th width="657" valign="top">
 
                    <strong>Description</strong>
 
            </th>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $role_id
 
            </td>
            <td width="143" valign="top">
 
                    Int
 
            </td>
            <td width="657" valign="top">
 
                    The role ID of the user
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $session_vector
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    Vector used for encryption/decryption for the user
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $user_id
 
            </td>
            <td width="143" valign="top">
 
                    Int
 
            </td>
            <td width="657" valign="top">
 
                    User ID
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $persistant_login
 
            </td>
            <td width="143" valign="top">
 
                    Boolean
 
            </td>
            <td width="657" valign="top">
 
                    Determines if login persists beyond session
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $email
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    User email
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $first_name
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    User first name
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $last_name
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    User last name
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $role_name
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    Name of user role
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    $role_hierarchy
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    Hierarchy of user role
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    [attribute name]
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    Custom user attributes can be created in the system on the
                    Manage Users page.
 
            </td>
        </tr>
        <tr>
            <td width="136" valign="top">
 
                    [Class based permissions]
 
            </td>
            <td width="143" valign="top">
 
                    String
 
            </td>
            <td width="657" valign="top">
 
                    Custom permissions can be assigned to roles for specific
                    classes
 
            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0" id="methods">
    <tbody>
        <tr>
            <td width="935" valign="top" class="header_cell">Methods
            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <th width="297" valign="top">
 
                    <strong>Name/Syntax</strong>
 
            </th>
            <th width="639" valign="top">
 
                    <strong>Description</strong>
 
            </th>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>
                        Static
                        <a  href="#create_hash">
                            create_hash
                        </a>
                    </strong>
                    ($email, $password)
 
            </td>
            <td width="639" valign="top">
 
                    Creates hash of email and password
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#create_vector"
                        >
                            create_vector
                        </a>
                    </strong>
                    ( )
 
            </td>
            <td width="639" valign="top">
 
                    Creates a unique encrypted vector for
                    encryption/decryption.
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#decryption"
                        >
                            decryption
                        </a>
                    </strong>
                    ($decode_text, $vector)
 
            </td>
            <td width="639" valign="top">
 
                    Decrypts the designated text using provided vector
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>
                        Static
                        <a
                            href="#email_to_id"
                        >
                            email_to_id
                        </a>
                    </strong>
                    ($email)
 
            </td>
            <td width="639" valign="top">
 
                    Takes an email address and return a user id if user exists.
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#encryption"
                        >
                            encryption
                        </a>
                    </strong>
                    ($encode_text, $vector)
 
            </td>
            <td width="639" valign="top">
 
                    Encrypts the designated text using provided vector
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#get_users"
                        >
                            get_users
                        </a>
                    </strong>
                    (
 
 
                    $users_info = array(),
 
 
                    $key_by_user_id = false)
 
            </td>
            <td width="639" valign="top">
 
                    Searches for users by provided roles or user_ids, and
                    returns all info about each user that matches the search
                    criteria.
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>
                        <a
                            href="#login"
                        >
                            login
                        </a>
                    </strong>
                    ($input)
 
            </td>
            <td width="639" valign="top">
 
                    Authenticate user with email and password entered in login
                    screen.
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>
                        <a
                            href="#logout"
                        >
                            logout
                        </a>
                    </strong>
                    ( )
 
            </td>
            <td width="639" valign="top">
 
                    Logout the current user.
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#lookup"
                        >
                            lookup
                        </a>
                    </strong>
                    ($email)
 
            </td>
            <td width="639" valign="top">
 
                    Encrypts email, used to lookup user
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>
                        <a
                            href="#make_user_object"
                        >
                            make_user_object
                        </a>
                    </strong>
                    ($user_id)
 
            </td>
            <td width="639" valign="top">
 
                    Create and populate the global $user object
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#order_preserving_hash"
                        >
                            order_preserving_hash
                        </a>
                    </strong>
                    ($string)
 
            </td>
            <td width="639" valign="top">
 
                    Create hash that preserves the sort order of the provided
                    string
 
            </td>
        </tr>
        <tr>
            <td width="297" valign="top">
 
                    <strong>Static</strong>
                    <strong>
                        <a
                            href="#vector_length"
                        >
                            vector_length
                        </a>
                    </strong>
                    ( )
 
            </td>
            <td width="639" valign="top">
 
                    Returns the length of the vector being used by the system.
 
            </td>
        </tr>
    </tbody>
</table>
<table border="1" cellspacing="0" cellpadding="0" class="header_cell">
    <tbody>
        <tr>
            <td width="935" valign="top">
                    Method Details
            </td>
        </tr>
    </tbody>
</table>

<table border="1" cellspacing="0" cellpadding="0" id="create_hash">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
              Create Hash
            </td>
        </tr>
    </tbody>
</table>
<p>
    Static method that creates hash of $email and $password
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    create_hash($email, $password)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $email
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    User email
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    $password
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    User password
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    String
 
            </td>
            <td width="738" valign="top">
 
                    Encrypted email and password
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    $hash = user::create_hash($input['email'],
                    $input['password']);
 
            </td>
        </tr>
    </tbody>
</table>
<p><a href="#methods">Back to Top</a>
<table border="1" cellspacing="0" cellpadding="0" id="create_vector">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                    Create Vector
            </td>
        </tr>
    </tbody>
</table>
<p>
    Static function used to create a unique encrypted vector for
    encryption/decryption.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    create_vector ()
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    No parameters
 
            </td>
            <td width="162" valign="top">
            </td>
            <td width="576" valign="top">
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    String
 
            </td>
            <td width="738" valign="top">
 
                    Encrypted vector
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    global $vce;<br> 
                    $sess_vector = $vce-&gt;user-&gt;create_vector();
 
            </td>
        </tr>
    </tbody>
</table>
<p><a href="#methods">Back to Top</a>
<table border="1" cellspacing="0" cellpadding="0" id="decryption">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Decryption
            </td>
        </tr>
    </tbody>
</table>
<p>
    Static function decrypts the designated text using provided vector
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    decryption ($decode_text, $vector)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $decode_text
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    Text to be decrypted
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    $vector
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    Vector to use in decryption
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    String
 
            </td>
            <td width="738" valign="top">
 
                    Decrypted text
 
            </td>
        </tr>
    </tbody>
</table>

<h3>
    Example
</h3>
<p>
    Dossier submitted with the form and then decrypted during the upload
    process.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
                    Global $vce;
                    <Br>
                    $dossier =
                    json_decode($user-&gt;decryption($_REQUEST['dossier'],
                    user-&gt;session_vector));
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>

<table border="1" cellspacing="0" cellpadding="0" id="email_to_id">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Email to ID
            </td>
        </tr>
    </tbody>
</table>
<p>
    Takes an email address and return a user id if user exists.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    email_to_id ($email)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $email
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    User email
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    Int
 
            </td>
            <td width="738" valign="top">
 
                    ID of user
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    Null
 
            </td>
            <td width="738" valign="top">
 
                    Return null if no user
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
                    $global vce;<br>
                    $user_id = $vce-&gt;user-&gt;email_to_id($input['email']);
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>

<table border="1" cellspacing="0" cellpadding="0" id="encryption">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Encryption
            </td>
        </tr>
    </tbody>
</table>
<p>
    Static function encrypts the designated text using provided vector
</p>
<table border="1" cellspacing="0" cellpadding="0" class="method_syntax">
    <tbody>
        <tr>
            <td width="935" valign="top">
 
                    encryption ($encode_text, $vector)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $encode_text
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    Text to be encrypted
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    $vector
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    Vector to use in encryption
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    String
 
            </td>
            <td width="738" valign="top">
 
                    Encrypted text
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<p>
    Encrypt the dossier using the session_vector for the user
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    Global $vce;<br>
                    $dossier =
                    $vce-&gt;user-&gt;encryption(json_encode($dossier_elements), 
                    $vce-&gt;user-&gt;session_vector);
 
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>

<table border="1" cellspacing="0" cellpadding="0" id="get_users">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Get Users
            </td>
        </tr>
    </tbody>
</table>
<p>
    Searches for users by provided roles or user_ids, and returns all info
    about each user that matches the search criteria. Note if both roles and
    user_ids are supplied, method will default to searching on the roles.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    get_users($users_info = array(), $key_by_user_id = false)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $key_by_user_id
 
            </td>
            <td width="162" valign="top">
 
                    Boolean
 
            </td>
            <td width="576" valign="top">
 
                    Determines whether the returned array should be keyed by
                    the user_id. False by default. If this is set to true,
                    $users_info is keyed by the user_id, and is populated with
                    user objects instead of arrays.
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    $users_info
 
            </td>
            <td width="162" valign="top">
 
                    Array
 
            </td>
            <td width="576" valign="top">
 
                    Users search criteria, by roles or user IDs
 
            </td>
        </tr>
        <tr>
            <td width="936" colspan="3" valign="top">
 
                    <strong>Potential members of the $users_info array</strong>
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    user_ids
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    String containing user IDs to search on, separated by ‘|’
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    roles
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    String containing roles to search on, separated by ‘|’. If
                    set to ‘all’, method will return all users.
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Return array
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="158" valign="top">
            </td>
            <td width="110" valign="top">
 
                    Boolean
 
            </td>
            <td width="668" valign="top">
 
                    Return false if no users matching criteria, or
                    no/improperly formatted search criteria provided
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
            </td>
            <td width="110" valign="top">
 
                    Array
 
            </td>
            <td width="668" valign="top">
 
                    Array with all relevant user info matching search criteria.
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="936" colspan="4" valign="top">
 
                   <strong>Members of the returned array</strong> 
 
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    [index]
 
            </td>
            <td width="110" valign="top">
 
                    Object
 
            </td>
            <td width="668" valign="top">
 
                    Object representing each returned user ($key_by_user_id =
                    false)
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    user_id
 
            </td>
            <td width="110" valign="top">
 
                    Object
 
            </td>
            <td width="668" valign="top">
 
                    Object representing each returned user ($key_by_user_id =
                    true)
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="936" colspan="4" valign="top">
 
                    <Strong>Properties of each object</Strong>
 
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    user_id
 
            </td>
            <td width="110" valign="top">
 
                    Int
 
            </td>
            <td width="668" valign="top">
 
                    User ID
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    role_id
 
            </td>
            <td width="110" valign="top">
 
                    Int
 
            </td>
            <td width="668" valign="top">
 
                    Role ID of user
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    first_name
 
            </td>
            <td width="110" valign="top">
 
                    String
 
            </td>
            <td width="668" valign="top">
 
                    User First Name
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    last_name
 
            </td>
            <td width="110" valign="top">
 
                    String
 
            </td>
            <td width="668" valign="top">
 
                    User last name
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    email
 
            </td>
            <td width="110" valign="top">
 
                    String
 
            </td>
            <td width="668" valign="top">
 
                    User email
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    [key]
 
            </td>
            <td width="110" valign="top">
 
                    String
 
            </td>
            <td width="668" valign="top">
 
                    Each meta_key and meta_value in the [<span class="italic">my_db</span>
                    ]_users_meta table for the user is decrypted and added to
                    the array. See
                    <a
                        href="#properties"
                    >
                        Properties
                    </a>
                    section for more details on user metadata.
 
            </td>
            <td width="1">
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    global $vce;<br>
                    <br>
                    $users_by_role = $vce-&gt;user-&gt;get_users($users_info =
                    array("roles"=&gt;"1|3");<br>
                    $key_by_user_id = false),
                    $users_by_user_id = $vce-&gt;user-&gt;get_users($users_info
                    =
                    array("user_ids"=&gt;"1|3"), $key_by_user_id = true);
 
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>
  
<table border="1" cellspacing="0" cellpadding="0" id="login">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Login
            </td>
        </tr>
    </tbody>
</table>
<p>
    Authenticate user with email and password entered in login screen.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    login ($input)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" colspan="2" valign="top">
 
                    $input
 
            </td>
            <td width="162" colspan="2" valign="top">
 
                    Array
 
            </td>
            <td width="576" colspan="2" valign="top">
 
                    Information used to authenticate the user
 
            </td>
        </tr>
        <tr>
            <td width="936" colspan="6" valign="top">
 
                    <strong>Members of the $input array</strong>
 
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    email
 
            </td>
            <td width="110" colspan="2" valign="top">
 
                    String
 
            </td>
            <td width="668" colspan="2" valign="top">
 
                    Email entered by user at login screen
 
            </td>
            <td width="1">
            </td>
        </tr>
        <tr>
            <td width="158" valign="top">
 
                    password
 
            </td>
            <td width="110" colspan="2" valign="top">
 
                    String
 
            </td>
            <td width="668" colspan="2" valign="top">
 
                    Password entered by user at login screen
 
            </td>
            <td width="1">
            </td>
        </tr>
        
    </tbody>
</table>

<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    Boolean
 
            </td>
            <td width="738" valign="top">
 
                    Return true if successful login, false if user already
                    logged in
 
            </td>
        </tr>
    </tbody>
</table>

<h3>
    Hooks
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top">
 
                    <span  class="hook">at_user_login</span> invoked after user object is created.
                    Receives user ID
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    global $vce;<br>
                    $success = $vce-&gt;user-&gt;login($input);
 
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>
  
<table border="1" cellspacing="0" cellpadding="0" id="logout">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Logout
            </td>
        </tr>
    </tbody>
</table>
<p>
    Logout the current user. Will clean out and update persistent login data,
    and unset any session data for the user.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    logout()
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="936" valign="top">
 
                    No parameters
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    No return value
 
            </td>
            <td width="738" valign="top">
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
    Hooks
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top">
                     <span class="hook">at_user_logout</span> invoked after user object, persistent login,
                    and session data all cleared/unset.
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
                    global $vce;<br>
                    $vce-&gt;user-&gt;logout();
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>
  
<table border="1" cellspacing="0" cellpadding="0" id="lookup">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Lookup
            </td>
        </tr>
    </tbody>
</table>
<p>
    Static method that encrypts email. Used to lookup user
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    lookup($email)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $email
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    User email
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    String
 
            </td>
            <td width="738" valign="top">
 
                    Encrypted email
 
            </td>
        </tr>
    </tbody>
</table>

<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    $lookup = self::lookup($email);
 
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>
  
<table border="1" cellspacing="0" cellpadding="0"  id="make_user_object">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Make User Object
            </td>
        </tr>
    </tbody>
</table>
<p>
    Create and populate the global $user object. Get data from [<span class="italic">my_db</span>
    ]_users and [<span class="italic">my_db</span>]_users_meta tables, session variables, and any
    role info from $site object. All encrypted data is decrypted before adding
    to user object. Also create a session vector for encryption/decryption that
    is added to user object. Add user object to session.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    make_user_object($user_id)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $user_id
 
            </td>
            <td width="162" valign="top">
 
                    Int
 
            </td>
            <td width="576" valign="top">
 
                    User ID
 
            </td>
        </tr>
    </tbody>
</table>

<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    Boolean
 
            </td>
            <td width="738" valign="top">
 
                    Return true if successful addition to session. Default is
                    true.
 
            </td>
        </tr>
    </tbody>
</table>

<h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
 
                    global $vce;<Br>
                    $vce-&gt;user-&gt;logout();
 
            </td>
        </tr>
    </tbody>
</table>

<p><a href="#methods">Back to Top</a>
  
<table border="1" cellspacing="0" cellpadding="0" id="order_preserving_hash">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Order Preserving Hash
            </td>
        </tr>
    </tbody>
</table>
<p>
    Create hash that preserves the sort order of the provided string. Calls
    oph_cipher and oph_cipher methods to do the heavy lifting.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    order_preserving_hash($string)
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    $string
 
            </td>
            <td width="162" valign="top">
 
                    String
 
            </td>
            <td width="576" valign="top">
 
                    Text for which you want an order preserving hash
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    String
 
            </td>
            <td width="738" valign="top">
 
                    Order preserving hash
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
</h3>
<h3>
</h3>
<!--h3>
    Example
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top">
 
                    example
 
            </td>
        </tr>
    </tbody>
</table-->

<p><a href="#methods">Back to Top</a></p>

<table border="1" cellspacing="0" cellpadding="0" id="vector_length">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_name">
                Vector Length
            </td>
        </tr>
    </tbody>
</table>
<p>
    Static function that returns the length of the vector being used by the
    system. This depends on the OPENSSL_VERSION_NUMBER value found in the
    vce-config.php file.
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="method_syntax">
 
                    vector_length()
 
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Parameters
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    No parameters
 
            </td>
            <td width="162" valign="top">
            </td>
            <td width="576" valign="top">
            </td>
        </tr>
    </tbody>
</table>
<h3>
    Return
</h3>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="198" valign="top">
 
                    Int
 
            </td>
            <td width="738" valign="top">
 
                    Returns the cipher length on success
 
            </td>
        </tr>
        <tr>
            <td width="198" valign="top">
 
                    Boolean
 
            </td>
            <td width="738" valign="top">
 
                    Returns false on failure
 
            </td>
        </tr>
    </tbody>
</table>

<h3>
    Example
</h3>
<p>
    Called in the __contruct() method of User
</p>
<table border="1" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td width="935" valign="top" class="codified">
                    global $vce;<br>
                    $length = self::vector_length();
            </td>
        </tr>
    </tbody>
</table>
<p><a href="#methods">Back to Top</a>




  </div><!--end main div-->

 
</body>
</html>
